@startuml datamodel
!include https://raw.githubusercontent.com/doubleSlashde/umltheme/main/puml-theme-doubleslash-class.puml

hide circle
skinparam ClassFontSize 12
skinparam Padding 8

title Class diagram of doubleSlash Software Factory artefacts
footer doubleSlash Software Factory artefacts



'Das ProductModel beschreibt eine Capability in den Dimensionen People, Process, System und Data vollständig.
'Diese vier Perspektiven sichern ab, dass keine Missverständnisse oder Lücken in der weiteren
'Entwicklung entstehen.
rectangle "Capability > Product Model " {
    together {
        class People
        class Process
        class System
        class Data
    }
    'Beschreibung der Interaktionen des Systems mit den Benutzern (Aktoren) oder anderen Systemen
    class UseCase
    ' Sammlung aller Technologien, die für das Produkt eingesetzt werden sollen:
    ' Frontend, Backend, Datenbank, Infrastruktur, Entwicklungswerkzeuge und Bibliotheken
    class TechnologyStack
}


'Dokumentation der Anforderungen nach dem Schema:
' Als [Rolle] möchte ich [Funktion], damit [Nutzen].
class Backlog

'Ein physikalisches Datenmodell beschreibt die Struktur und Beziehungen der Daten in einer Datenbank.
'Es definiert die Tabellen, Spalten, Relationen und Constraints.
class DataModel
class Mockup
class APIDesign
class AcceptanceCriteria
class TestCase
class ModuleDesign
class SequenceModel
class SourceCode
class BuildCode
class DeploymentCode
class InfrastructureCode
class DeploymentArtefact

class Incident #DS_LIGHTGREY
class Defect #DS_LIGHTGREY
class PullRequest #DS_LIGHTGREY


'Ableitung der Use Cases aus dem Benutzer- und Prozessmodell
People  -- UseCase
Process --  UseCase
System -- TechnologyStack
Data -- TechnologyStack
UseCase -- Backlog : wird zu >


TechnologyStack --> DataModel
Backlog --- "0..1" Mockup
Backlog --- "0..1" APIDesign
Backlog "1" --- "n" AcceptanceCriteria


AcceptanceCriteria -- TestCase
TestCase - ModuleDesign

DataModel -- ModuleDesign
Mockup -- ModuleDesign
AcceptanceCriteria -- ModuleDesign

APIDesign -- ModuleDesign

ModuleDesign -- SequenceModel

SequenceModel -- SourceCode

ModuleDesign --- DeploymentCode
ModuleDesign --- BuildCode
TechnologyStack ---- DeploymentCode
TechnologyStack ------- InfrastructureCode 

SourceCode "1" -- "0..n" PullRequest
SourceCode -- DeploymentArtefact


DeploymentArtefact "1" -- "0..n" Defect
DeploymentArtefact "1" -- "0..n" Incident

Defect "1" --- "1..n" TestCase
Incident "1" -- "1..n" TestCase



@enduml

